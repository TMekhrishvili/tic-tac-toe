[{"C:\\Users\\User\\Desktop\\small\\tic-tac-toe\\src\\components\\Main.jsx":"1","C:\\Users\\User\\Desktop\\small\\tic-tac-toe\\src\\App.js":"2"},{"size":1497,"mtime":1609006309711,"results":"3","hashOfConfig":"4"},{"size":241,"mtime":1608992264485,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"8"},"1lsfnhz",{"filePath":"9","messages":"10","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\User\\Desktop\\small\\tic-tac-toe\\src\\components\\Main.jsx",["11"],"import React, { useState } from 'react';\r\nimport './main.css';\r\nimport Cell from './Cell';\r\n\r\n\r\nconst arr = Array(9).fill(null);\r\nconst Main = () => {\r\n    const [step, setstep] = useState(0);\r\n    const [gameOver, setGameOver] = useState(false);\r\n    const [winner, setWinner] = useState(null)\r\n    const checkWinner = (array) => {\r\n        const lines = [\r\n            [0, 1, 2],\r\n            [3, 4, 5],\r\n            [6, 7, 8],\r\n            [0, 3, 6],\r\n            [1, 4, 7],\r\n            [2, 5, 8],\r\n            [0, 4, 8],\r\n            [2, 4, 6],\r\n        ];\r\n        for (let i = 0; i < lines.length; i++) {\r\n            const [a, b, c] = lines[i];\r\n            if (array[a] && array[a] === array[b] && array[a] === array[c]) {\r\n                return array[a];\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    const handleClick = (index) => {\r\n        if (arr[index] === null && !gameOver) {\r\n            setstep(step + 1);\r\n            arr[index] = (step + 1) % 2;\r\n            const check = checkWinner(arr);\r\n            if (check !== null) {\r\n                setGameOver(true);\r\n                setWinner(check);\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"main-container\">\r\n            {arr.map((value, index) => (\r\n                <Cell\r\n                    key={index}\r\n                    value={value}\r\n                    callBack={() => handleClick(index)}\r\n                />\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\nexport default Main","C:\\Users\\User\\Desktop\\small\\tic-tac-toe\\src\\App.js",[],{"ruleId":"12","severity":1,"message":"13","line":10,"column":12,"nodeType":"14","messageId":"15","endLine":10,"endColumn":18},"no-unused-vars","'winner' is assigned a value but never used.","Identifier","unusedVar"]